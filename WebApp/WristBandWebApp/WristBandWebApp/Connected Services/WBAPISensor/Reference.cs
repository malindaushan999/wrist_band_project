//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WristBandWebApp.WBAPISensor {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Request", Namespace="http://schemas.datacontract.org/2004/07/WristBandAPI.Common")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WristBandWebApp.WBAPISensor.UploadSensorDataRequest))]
    public partial class Request : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SessionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((this.SessionIdField.Equals(value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadSensorDataRequest", Namespace="http://schemas.datacontract.org/2004/07/WristBandAPI.Sensor")]
    [System.SerializableAttribute()]
    public partial class UploadSensorDataRequest : WristBandWebApp.WBAPISensor.Request {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SensorIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SensorId {
            get {
                return this.SensorIdField;
            }
            set {
                if ((this.SensorIdField.Equals(value) != true)) {
                    this.SensorIdField = value;
                    this.RaisePropertyChanged("SensorId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CSResponse", Namespace="http://schemas.datacontract.org/2004/07/WristBandAPI.Common")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WristBandWebApp.WBAPISensor.UploadSensorDataResponse))]
    public partial class CSResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResultCode {
            get {
                return this.ResultCodeField;
            }
            set {
                if ((this.ResultCodeField.Equals(value) != true)) {
                    this.ResultCodeField = value;
                    this.RaisePropertyChanged("ResultCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultMessage {
            get {
                return this.ResultMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultMessageField, value) != true)) {
                    this.ResultMessageField = value;
                    this.RaisePropertyChanged("ResultMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadSensorDataResponse", Namespace="http://schemas.datacontract.org/2004/07/WristBandAPI.Sensor")]
    [System.SerializableAttribute()]
    public partial class UploadSensorDataResponse : WristBandWebApp.WBAPISensor.CSResponse {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WBAPISensor.IWristbandSensor")]
    public interface IWristbandSensor {
        
        [System.ServiceModel.OperationContractAttribute(Action="/UploadSensorDataReq", ReplyAction="/UploadSensorDataRes")]
        WristBandWebApp.WBAPISensor.UploadSensorDataResponse UploadSensorData(WristBandWebApp.WBAPISensor.UploadSensorDataRequest req);
        
        [System.ServiceModel.OperationContractAttribute(Action="/UploadSensorDataReq", ReplyAction="/UploadSensorDataRes")]
        System.Threading.Tasks.Task<WristBandWebApp.WBAPISensor.UploadSensorDataResponse> UploadSensorDataAsync(WristBandWebApp.WBAPISensor.UploadSensorDataRequest req);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWristbandSensorChannel : WristBandWebApp.WBAPISensor.IWristbandSensor, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WristbandSensorClient : System.ServiceModel.ClientBase<WristBandWebApp.WBAPISensor.IWristbandSensor>, WristBandWebApp.WBAPISensor.IWristbandSensor {
        
        public WristbandSensorClient() {
        }
        
        public WristbandSensorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WristbandSensorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WristbandSensorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WristbandSensorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WristBandWebApp.WBAPISensor.UploadSensorDataResponse UploadSensorData(WristBandWebApp.WBAPISensor.UploadSensorDataRequest req) {
            return base.Channel.UploadSensorData(req);
        }
        
        public System.Threading.Tasks.Task<WristBandWebApp.WBAPISensor.UploadSensorDataResponse> UploadSensorDataAsync(WristBandWebApp.WBAPISensor.UploadSensorDataRequest req) {
            return base.Channel.UploadSensorDataAsync(req);
        }
    }
}
